{"version":3,"sources":["firebaseConfig.js","demo.jpg","App.js","reportWebVitals.js","index.js"],"names":["config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","auth","firestore","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","className","style","margin","SignOut","currentUser","signOut","Chatroom","referingElement","useRef","messageRef","collection","query","orderBy","limit","console","log","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","check","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","placeholder","type","messageType","src","userPicture","alt","App","useAuthState","user","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAUmBA,EAVJ,CACXC,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gBCPJ,MAA0B,iC,OCUzCC,IAASC,cAAcT,GAEvB,IAAMU,EAAOF,IAASE,OAChBC,EAAYH,IAASG,YAoB3B,SAASC,IAMP,OACE,qCACE,wBAAQC,QAPS,WACnB,IAAMC,EAAW,IAAIN,IAASE,KAAKK,mBACnCL,EAAKM,gBAAgBF,IAKYG,UAAU,UAAzC,iCACA,mBAAGC,MAAO,CAAEC,OAAQ,aAApB,mFAKN,SAASC,IACP,OAAOV,EAAKW,aACV,wBAAQJ,UAAU,WAAWJ,QAAU,kBAAMH,EAAKY,WAAlD,sBAIJ,SAASC,IACP,IAAMC,EAAkBC,mBAElBC,EAAaf,EAAUgB,WAAW,YAClCC,EAAQF,EAAWG,QAAQ,aAAaC,MAAM,KACpDC,QAAQC,IAAIJ,GALM,MAMCK,YAAkBL,EAAO,CAACM,QAAS,OAA/CC,EANW,sBAQgBC,mBAAS,IARzB,mBAQXC,EARW,KAQAC,EARA,KAUZC,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAClBD,EAAME,iBADY,EAEQhC,EAAKW,YAAvBsB,EAFU,EAEVA,IAAKC,EAFK,EAELA,SAFK,SAIZlB,EAAWmB,IAAI,CACnBC,KAAMT,EACNU,UAAWvC,IAASG,UAAUqC,WAAWC,kBACzCN,MACAC,aARgB,OAWlBN,EAAa,IACbd,EAAgB0B,QAAQC,eAAgB,CAAEC,SAAU,WAZlC,2CAAH,sDAcjB,OACE,qCAEE,+BACE,sBAAKnC,UAAU,gBAAf,UACGkB,GAAYA,EAASkB,KAAK,SAACC,GAAD,OAAS,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OAC1D,qBAAKC,IAAKlC,SAGd,uBAAMmC,SAAWpB,EAAjB,UACE,uBAAOqB,MAAQvB,EAAYwB,SAAW,SAACrB,GAAD,OAAWF,EAAaE,EAAMsB,OAAOF,QAASG,YAAY,yBAChG,wBAAQC,KAAK,SAAb,wBAOR,SAAST,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QACbV,EAAwBU,EAAxBV,KAAMH,EAAkBa,EAAlBb,IAAKC,EAAaY,EAAbZ,SACbqB,EAActB,IAAQjC,EAAKW,YAAYsB,IAAM,OAAS,WAE5D,OACE,sBAAK1B,UAAS,kBAAagD,EAAb,KAAd,UACE,qBAAKC,IAAKV,EAAQZ,SAAWA,EAAWuB,EAAcC,IAAI,YAC1D,4BAAItB,OAKKuB,MA5Ff,WAAgB,IAAD,EAEEC,YAAa5D,GAArB6D,EAFM,oBAIb,OACE,sBAAKtD,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,oBAAIC,MAAO,CAAEsD,SAAU,OAAvB,uCACA,cAACpD,EAAD,OAEF,kCACImD,EAAO,cAAChD,EAAD,IAAe,cAACX,EAAD,UCdjB6D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ccb6c00c.chunk.js","sourcesContent":["const config = {\r\n    apiKey: \"AIzaSyAawO7YRgRL45SmK8MjKtK4u65ONAYV0M4\",\r\n    authDomain: \"chatting-app-12990.firebaseapp.com\",\r\n    projectId: \"chatting-app-12990\",\r\n    storageBucket: \"chatting-app-12990.appspot.com\",\r\n    messagingSenderId: \"112567462662\",\r\n    appId: \"1:112567462662:web:cb70df137e23e02009cc87\",\r\n    measurementId: \"G-9PLQVRNLFZ\"\r\n    };\r\n  \r\n    export default config;","export default __webpack_public_path__ + \"static/media/demo.b8a96309.jpg\";","import React, { useState, useRef } from 'react';\r\nimport './App.css';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport config from './firebaseConfig'\r\nimport userPicture from './demo.jpg' \r\n\r\nfirebase.initializeApp(config)\r\n\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\n\r\nfunction App() { \r\n\r\n  const [user] = useAuthState(auth); \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h3 style={{ fontSize: '4vw' }}>ðŸ’¬ CHATTING APP</h3>\r\n        <SignOut />\r\n      </header>\r\n      <section>\r\n        { user ? <Chatroom /> : <SignIn /> }\r\n        {/* {console.log(user)} */}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SignIn() {\r\n  const signInGoogle = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    auth.signInWithPopup(provider);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button onClick={signInGoogle} className='sign-in'>Sign in with Google</button>\r\n      <p style={{ margin: \"15px auto\"}}>Do not violate the community guidelines or Actions will be taken !</p>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction SignOut() {\r\n  return auth.currentUser && ( \r\n    <button className='sign-out' onClick={ () => auth.signOut() } >Sign out</button>\r\n  )\r\n}\r\n\r\nfunction Chatroom() {\r\n  const referingElement = useRef();\r\n\r\n  const messageRef = firestore.collection(\"messages\");\r\n  const query = messageRef.orderBy('createdAt').limit(100);\r\n  console.log(query)\r\n  const [messages] = useCollectionData(query, {idField: 'id'});\r\n\r\n  const [formValue, setFormValue] = useState('');\r\n  \r\n  const sendMessage = async (check) => {\r\n    check.preventDefault();\r\n    const { uid, photoURL } = auth.currentUser;\r\n\r\n    await messageRef.add({\r\n      text: formValue,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      uid,\r\n      photoURL\r\n    });\r\n\r\n    setFormValue('');\r\n    referingElement.current.scrollIntoView( { behavior: 'smooth' } );\r\n  }\r\n  return (\r\n    <>\r\n\r\n      <main>\r\n        <div className='messageScreen'>\r\n          {messages && messages.map( (msg) => <ChatMessage key={msg.id} message={msg} />  )}\r\n          <div ref={referingElement}></div>\r\n        </div>\r\n      </main>\r\n      <form onSubmit={ sendMessage }>\r\n        <input value={ formValue } onChange={ (check) => setFormValue(check.target.value) } placeholder='Enter your text here' />\r\n        <button type='submit'>Send</button>\r\n      </form>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nfunction ChatMessage({ message }) {\r\n  const { text, uid, photoURL } = message;\r\n  const messageType = uid === auth.currentUser.uid ? 'sent' : 'received' ;\r\n\r\n  return ( \r\n    <div className={`message ${messageType} `}>\r\n      <img src={message.photoURL ? photoURL : userPicture } alt=\"profile\" />\r\n      <p>{text}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}